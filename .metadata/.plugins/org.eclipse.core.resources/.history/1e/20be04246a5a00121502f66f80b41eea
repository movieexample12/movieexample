package com.listmovie;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;

import android.content.ContentValues;
import android.content.Context;
import android.graphics.drawable.Drawable;
import android.location.LocationManager;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;

import com.google.android.maps.GeoPoint;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.MyLocationOverlay;
import com.google.android.maps.Overlay;
import com.listmovie.cinema.database.Cinema;
import com.listmovie.cinema.database.CinemaProvider;
import com.listmovie.cinema.googleplace.GooglePlace;
import com.listmovie.cinema.googleplace.GooglePlaceDetails;
import com.listmovie.cinema.googleplace.GooglePlaces;
import com.listmovie.cinema.googleplace.GooglePlacesList;
import com.listmovie.cinema.overlay.CinemaOverlayItem;
import com.listmovie.cinema.overlay.CinemasItemizedOverlay;
import com.listmovie.utils.GeoUpdateHandler;

public class GoogleMapActivity extends MapActivity {
	
	private static final int COUNT_OF_SEATS = 30;
	private static List<Integer> list = new ArrayList<Integer>();
	//init list of seats 'bause we have no infirmation about it
	static {
		for (int i=1; i<=COUNT_OF_SEATS; ++i ) {
	     	list.add(i);
	    }
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.map);
		final MapView mapView = (MapView) findViewById(R.id.mapview);

	    MapController mapController = mapView.getController();
	    mapController.setZoom(14); 
	    
	    Drawable drawable = this.getResources().getDrawable(android.R.drawable.arrow_up_float);
	    CinemasItemizedOverlay itemizedoverlay = new CinemasItemizedOverlay(drawable, this);
	    
		mapView.setBuiltInZoomControls(true);
		LocationManager locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
	    locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0,
	        0, new GeoUpdateHandler(mapController, mapView, itemizedoverlay));

	    final MyLocationOverlay myLocationOverlay = new MyLocationOverlay(this, mapView);
	    mapView.getOverlays().add(myLocationOverlay);

	    myLocationOverlay.runOnFirstFix(new Runnable() {
	        public void run() {
	            mapView.getController().animateTo(myLocationOverlay.getMyLocation());
	        }
	    });
	    
       new AsyncTask<Void, Integer, List<GooglePlaceDetails>> () {
    	  @Override
    	  protected List<GooglePlaceDetails> doInBackground(Void... params) {
    			GooglePlacesList list = null;
    			final List<GooglePlaceDetails> detailedList = new ArrayList<GooglePlaceDetails>();
				try {
    				list = GooglePlaces.search(48.466601, 35.018155, 5500, "establishment");
    				for (GooglePlace place: list.results) {
						detailedList.add(GooglePlaces.getPlaceDetails(place.reference));
					}
    			} catch (Exception e) {
    				Log.e("Places list some bug:", e.getMessage());
    			}
    			return detailedList;
    		}
    	  
    		protected void onPostExecute(List<GooglePlaceDetails> details_list) {
    			
    		    List<Overlay> mapOverlays = mapView.getOverlays();
    		    Drawable drawable = GoogleMapActivity.this.getResources().getDrawable(android.R.drawable.arrow_down_float);
    		    CinemasItemizedOverlay itemizedoverlay = new CinemasItemizedOverlay(drawable, GoogleMapActivity.this);
    		    if (details_list == null || details_list.isEmpty()) {
    		    	return;
    		    }
    		    
    		    try {
    		    	for (GooglePlaceDetails details : details_list) {
    		    		GooglePlace place = details.result;
    					ContentValues initialValues = new ContentValues();
    					initialValues.put(Cinema.COLUMN_NAME_ID_S, place.id);
    					initialValues.put(Cinema.COLUMN_NAME_FORMATTED_PHONE_NUMBER, place.formatted_phone_number);
    			        initialValues.put(Cinema.COLUMN_NAME_ICON, place.icon);
    			        initialValues.put(Cinema.COLUMN_NAME_NAME, place.name);
    			        initialValues.put(Cinema.COLUMN_NAME_WEBSITE, place.website);
    			        initialValues.put(Cinema.COLUMN_NAME_LATITUDE, place.geometry.location.lat);
    			        initialValues.put(Cinema.COLUMN_NAME_LONGTITUDE, place.geometry.location.lng);
    			        initialValues.put(Cinema.COLUMN_NAME_VICINITY, place.vicinity);
    			        initialValues.put(Cinema.COLUMN_NAME_SEATSSIZE, COUNT_OF_SEATS);
    			       
    			        /* Genereating random set of free seats */
    			        Collections.shuffle(list);
    			        
    			        int numberFree = new Random().nextInt(COUNT_OF_SEATS);
    			        
    			        /* Returns a string containing a concise, human-readable description of the receiver: a comma-delimited list of the indexes of all set bits. */
    			        initialValues.put(Cinema.COLUMN_NAME_SEATS, list.subList(0, numberFree).toString());
    			        
    			        if ( place.opening_hours != null) {
    			        	initialValues.put(Cinema.COLUMN_NAME_OPENING_HOURS, place.opening_hours.toString());
    			        }
    			        
    			        getContentResolver().insert(CinemaProvider.CONTENT_URI, initialValues);
    			        
    			       
    					int lat = (int) (1E6 * place.geometry.location.lat);
        		    	int lng = (int) (1E6 * place.geometry.location.lng);
        		    	GeoPoint point = new GeoPoint(lat, lng);
        		    	CinemaOverlayItem overlayitem = new CinemaOverlayItem(point, place.name, place.vicinity, place.id) ;
            	    	itemizedoverlay.addOverlay(overlayitem);
    				}
    		    	mapOverlays.add(itemizedoverlay);
    		    } catch (Exception ex) {
    		    	Log.e("Exception while try get google places details and add data to DataBase",
    		    			ex.getMessage());
    		    }
    		    
    		};
    	}.execute();
    	
    	
	}
	
	@Override
    protected boolean isRouteDisplayed() {
        return false;
    }
	
}
